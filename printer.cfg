
# This file contains common pin mappings for the ORTUR OBSIDIAN
# To use this config, the firmware should be compiled for the
# STM32F103 with a "64KiB bootloader" and communication interface (Serial (on USART1 PA10/PA9)).

# The "make flash" command does not work on the ORTUR OBSIDIAN. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "OPF_OBS_V62_MARLIN_20230325.bin" put on an SD in ~/system/ card and then restart the ORTUR OBSIDIAN
#If there is a problem with communication, I recommend using the UART output on the motherboard and a USB adapter.

[stepper_x]
step_pin: PB10
dir_pin: PB11
enable_pin: !PB2
microsteps: 16
rotation_distance: 40
endstop_pin: !PC14
position_endstop: 0
position_min: 0
position_max: 254
homing_speed: 70

[stepper_y]
step_pin: PC12
dir_pin: !PC11
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: !PC15
position_endstop: 0
position_min: 0
position_max: 254
homing_speed: 70

[stepper_z]
step_pin: PC7
dir_pin: PC8
enable_pin: !PC9
microsteps: 16
rotation_distance: 8
#endstop_pin: !PC4
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 300
position_min: -2

[extruder]
step_pin: PC1
dir_pin: PC2
enable_pin: !PC0
microsteps: 16
full_steps_per_rotation: 200
gear_ratio: 3:1
rotation_distance: 23.132
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
control = pid
pid_kp = 18.347
pid_ki = 0.849
pid_kd = 99.072
min_temp: 0
max_temp: 250
pressure_advance: 0.08
max_extrude_only_distance: 250.0
[heater_bed]
heater_pin: PB1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA0
control: pid
pid_kp = 58.703
pid_ki = 1.125
pid_kd = 766.077
min_temp: 0
max_temp: 90
####
[heater_fan heatbreak_cooling_fan]
pin: PA6
heater: extruder
heater_temp: 50.0
[heater_fan controller_fan]
pin: PA11
[fan]
pin: PA7
#######DJ

[mcu]

serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

#serial: /dev/ttyUSB0
#serial: /dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller-if00-port0
restart_method: command



[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000
max_z_velocity: 10
max_z_accel: 50
[input_shaper]
#shaper_type_y = mzv
#shaper_freq_y = 37.8
#shaper_type_x = 3hump_ei
#shaper_freq_x = 72.6[idle_timeout]
[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=600

#[static_digital_output usb_pullup_enable]
#pins: !PC13

[probe]
pin: !PC13
x_offset: -21
y_offset: -27.0
#z_offset = 0.0
#z_offset = 0.039
samples: 2
samples_result: average
[bed_mesh]
speed: 200
mesh_min: 30, 30 
mesh_max: 215, 220 
probe_count: 6, 6

[output_pin beeper]
pin: PA14
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 

[safe_z_home]
home_xy_position: 125.5,125.5 # Change coordinates to the center of your print bed
z_hop: 10 # Move up 10mm
z_hop_speed: 5


[screws_tilt_adjust]
screw1: 60,80
screw1_name: front left screw
screw2: 215.50,80
screw2_name: front right screw
screw3: 215.50,235.50
screw3_name: rear right screw
screw4: 60,235.50
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

########################################
# Macro configs
########################################
 
[gcode_macro G29]
gcode:
    G28
    G1 Z10 F600
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=1

##########################
[virtual_sdcard]
path: /home/darek/printer_data/gcodes
[display_status]


[filament_switch_sensor filament_sensor]
switch_pin: ^!PB6
pause_on_runout: True
insert_gcode:
    M117 Insert Detected
    { action_respond_info("Insert Detected") }
runout_gcode:
    M117 Runout Detected
    { action_respond_info("Runout Detected") }
    CONDITIONAL_BEEP i=3 dur=300 freq=400



#[mcu rpi]
#serial: /tmp/klipper_host_mcu
#[display]
#lcd_type: ssd1306
#menu_timeout: 30
#i2c_mcu: rpi
#i2c_bus: i2c.1
#[adxl345]
#cs_pin: rpi:None
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125,125,30
#[mcu arduino_nano_adxl]
#serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

#[adxl345]
#cs_pin: arduino_nano_adxl:PB2
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125,125,50
#HotENDLED
[output_pin LED]
pin: PA8
value: 1



########DJ Power
# Lets assume that it's Arduino pin 12
#[output_pin SCREEN]
#pin: PC6
#value: 0

# power on
#[gcode_macro M80]
#gcode: SET_PIN PIN=SCREEN VALUE=1

# power off
#[gcode_macro M81]
#gcode: SET_PIN PIN=SCREEN VALUE=0

#[output_pin POWER]
#pin: PA12
#value: 0

# power on
#[gcode_macro M80]
#gcode: SET_PIN PIN=POWER VALUE=1

# power off
#[gcode_macro M81]
#gcode: SET_PIN PIN=POWER VALUE=0

[input_shaper]
#shaper_type_x = 3hump_ei
#shaper_freq_x = 76.4
#shaper_type_y = mzv
#shaper_freq_y = 37.8

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.115000, -0.116250, -0.056250, -0.041250, 0.031250, -0.060000
#*# 	  -0.176250, -0.166250, -0.122500, -0.148750, -0.132500, -0.210000
#*# 	  -0.121250, -0.075000, -0.031250, -0.088750, -0.081250, -0.213750
#*# 	  -0.087500, -0.042500, -0.002500, -0.046250, -0.053750, -0.131250
#*# 	  -0.087500, -0.031250, 0.051250, 0.020000, 0.013750, -0.053750
#*# 	  -0.168750, -0.150000, -0.062500, -0.073750, -0.093750, -0.111250
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 215.0
#*# min_y = 30.0
#*# max_y = 220.0
#*#
#*# [bed_mesh 1]
#*# version = 1
#*# points =
#*# 	-0.028750, -0.083750, -0.016250, -0.020000, 0.028750, -0.081250
#*# 	-0.070000, -0.140000, -0.110000, -0.167500, -0.167500, -0.236250
#*# 	-0.052500, -0.052500, -0.018750, -0.103750, -0.110000, -0.241250
#*# 	-0.043750, -0.048750, -0.003750, -0.081250, -0.110000, -0.161250
#*# 	-0.061250, -0.031250, 0.038750, -0.025000, -0.040000, -0.111250
#*# 	-0.131250, -0.158750, -0.085000, -0.137500, -0.172500, -0.187500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
