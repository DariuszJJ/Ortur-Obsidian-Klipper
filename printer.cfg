
# This file contains common pin mappings for the BIGTREETECH SKR E3
# DIP. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PC13".

# The "make flash" command does not work on the SKR E3 DIP. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR E3
# DIP with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: This board has a design flaw in its thermistor circuits that
# cause inaccurate temperatures (most noticeable at low temperatures).

[stepper_x]
step_pin: PB10
dir_pin: PB11
enable_pin: !PB2
microsteps: 16
rotation_distance: 40
endstop_pin: !PC14
position_endstop: 0
position_max: 250
homing_speed: 50

[stepper_y]
step_pin: PC12
dir_pin: !PC11
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: !PC15
position_endstop: 0
position_max: 250
homing_speed: 50

[stepper_z]
step_pin: PC7
dir_pin: PC8
enable_pin: !PC9
microsteps: 16
rotation_distance: 8
endstop_pin: !PC4
position_endstop: 0.0
position_max: 300
position_min: -2

[extruder]
step_pin: PC1
dir_pin: PC2
enable_pin: !PC0
microsteps: 16
full_steps_per_rotation: 200
gear_ratio: 3:1
rotation_distance: 23.132
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
control = pid
pid_kp = 18.347
pid_ki = 0.849
pid_kd = 99.072
min_temp: 0
max_temp: 250
pressure_advance: 0.075
max_extrude_only_distance: 250.0
[heater_bed]
heater_pin: PB1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA0
control: pid
pid_kp = 58.703
pid_ki = 1.125
pid_kd = 766.077
min_temp: 0
max_temp: 90


#[heater_fan heatbreak_cooling_fan]
#pin: PA6

#[heater_fan controller_fan]
#pin: PA3

###MAINBORDPA11
#[fan]
#pin: PA11

####
[heater_fan heatbreak_cooling_fan]
pin: PA6

[heater_fan controller_fan]
pin: PA11

[fan]
pin: PA7



[mcu]

serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#serial: /dev/ttyUSB0
#serial: /dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller-if00-port0
restart_method: command


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2500
max_z_velocity: 5
max_z_accel: 100
[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 29.2
shaper_type_y = mzv
shaper_freq_y = 37.2

#[static_digital_output usb_pullup_enable]
#pins: !PC13

[probe]
pin: !PC13
x_offset: -21
y_offset: -27.0
z_offset = 0.440
#z_offset = 0.160
samples: 2
samples_result: average
[bed_mesh]
speed: 200
#horizontal_move_z: 2
#mesh_min: 20, 35
#mesh_max: 220,240
#probe_count: 5,12
#relative_reference_index: 25 #Generate mesh relative to center post for nylock.
#mesh_pps: 0,0 #Don't generate interperlated points so our mesh is compatible with nylock calculators like https://pcboy.github.io/g81_relative/
mesh_min: 30, 30 
mesh_max: 215, 220 
probe_count: 6, 6

#Home in lower, lefthand corner.
#[homing_override]
#gcode:
# G1 Z3
# G28 X0 Y200
# G1 X1 Y0 F5000
# G28 Z0
#axes: Z
#set_position_x: 125
#set_position_y: 125
#set_position_z: 0

[output_pin _beeper]
pin: PA14
pwm: True
value: 1
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=_beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=_beeper VALUE=0
        G4 P{dur}
    {% endfor %}

[safe_z_home]
home_xy_position: 125.5,125.5 # Change coordinates to the center of your print bed
z_hop: 10 # Move up 10mm
z_hop_speed: 5

[screws_tilt_adjust]
screw1: 60,80
screw1_name: front left screw
screw2: 215.50,80
screw2_name: front right screw
screw3: 215.50,235.50
screw3_name: rear right screw
screw4: 60,235.50
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

########################################
# Macro configs
########################################
 
[gcode_macro G29]
gcode:
    G28
    G1 Z10 F600
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=default

##########################
[virtual_sdcard]
path: /home/darek/printer_data/gcodes
[display_status]

[pause_resume]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.347
#*# pid_ki = 0.849
#*# pid_kd = 99.072
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 58.703
#*# pid_ki = 1.125
#*# pid_kd = 766.077
# Pause/Resume functionality with support of position capture and restore
[pause_resume]
recover_velocity: 50
#recover_velocity: 200
# When capture/restore is enabled, the speed at which to return to
# the captured position (in mm/s). Default is 50.0 mm/s.
# paste "unknownCommandsNeedAck: true" in ~/.octoprint/config.yaml
######################################
# #
# serial: #
# additionalPorts: #
# - /tmp/printer #
# baudrate: 250000 #
# disconnectOnErrors: false #
# logPositionOnCancel: true #
# port: /tmp/printer #
# unknownCommandsNeedAck: true #
# #
######################################
[filament_switch_sensor RunoutSensor]
pause_on_runout: False
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: ^!PB6


#[mcu rpi]
#serial: /tmp/klipper_host_mcu
#[adxl345]
#cs_pin: rpi:None
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125,125,50
#[mcu arduino_nano_adxl]
#serial: /dev/ttyUSB1

#[adxl345]
#cs_pin: arduino_nano_adxl:PB2


#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125,125,30
#HotENDLED
[output_pin LED]
pin: PA8
value: 1

[gcode_macro UNLOAD_FILAMENT]
description:Unload Filament
gcode:
    {% set hotendtemp = params.HOTEND|default(230)|int %}
    SAVE_GCODE_STATE NAME=unload_state
    {% if printer.pause_resume.is_paused == False %}                            ; PAUSE active? if not then normal unload with position, heatup, and tip...
      M104 S{hotendtemp}                                                        ; set & continue hotend temp, default to 230
      {% if printer.toolhead.homed_axes != 'xyz' %}                             ; Home if not already homed
        M117 Homing...
        STATUS_HOMING                                                           ; LEDs show homing
        G28                                                                     ; Alphaville: Lassie come home, come home lalala
      {% endif %}
      G1 Y50 X240 Z50 F3600                                                     ; move toolhead to reachable position and ...
      M117 Heating
      STATUS_HEATING                                                            ; LEDs show heating
      M109 S{hotendtemp}                                                        ; set & wait for hotend temp, default to 230
      M117 Unloading Filament 
      STATUS_PRINTING                                                           ; LEDs show printing
      G91
      G0 E50 F360                                                               ; extract a bit
      G0 E5 F3600                                                               ; blob a bit
      G0 E-22 F3600                                                             ; forming filament Tip for Rapido -> from ERCF V3 ercf_software.cfg 
      G0 E2 F300
      G0 E-2.1 F300
      G0 E2 F300
      G0 E-2.2 F300
      G0 E2 F300
      G0 E-2.3 F300
      G0 E2 F300
      G0 E-2.4 F300
      G0 E2 F300
      G0 E-2.5 F300
      G0 E2 F300
      G0 E-43 F300                                                               ; Filament Tip cooldown till extruder gears for Rapido -> from ERCF V3 ercf_software.cfg 
      G0 E-100 F3600                                                             ; aaand puke it out fast
       M117 Fila unloaded, what now?
    {% else %}                                                                   ; UUPS!! Pause or M600 active, hurry up now, time is Filament 
      M117 Unloading Filament
      STATUS_PRINTING                                                            ; LEDs show printing
      G91
      G0 E10 F360                                                                ; extract a bit
      G0 E5 F3600                                                                ; blob a bit
      G0 E-150 F3600                                                             ; schwupdiwup, away with it
      M117 Fila unloaded, hurry up for the next!
    {% endif %}
#    STATUS_COOLING                                                               ; LEDs show cooling
#    TURN_OFF_HEATERS                                                             ; cooldown
    G90
    STATUS_READY                                                                  ; LEDs show ready
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description:Load Filament
gcode:
    {% set hotendtemp = params.HOTEND|default(230)|int %}
    SAVE_GCODE_STATE NAME=load_state
    {% if printer.pause_resume.is_paused == False %}                            ; PAUSE active? if not then normal loading with position, heatup...
      M104 S{hotendtemp}                                                        ; set & continue hotend temp, default to 230
      {% if printer.toolhead.homed_axes != 'xyz' %}                             ; Home if not already homed
        M117 Homing...
        STATUS_HOMING                                                           ; LEDs show homing
        G28                                                                     ; Lynyrd Skynyrd: sweet home Alabama Lalala
      {% endif %}
      G1 Y50 X240 Z50 F3600                                                     ; move toolhead to reachable position and ...
      M117 Heating
      STATUS_HEATING                                                            ; LEDs show heating
      M109 S{hotendtemp}                                                        ; set & wait for hotend temp, default to 230
      M117 loading Filament
      STATUS_PRINTING                                                           ; LEDs show printing
      G91
      G1 E50 F360                                                              ; extract 200mm for colour change
      G1 E5 F3600                                                               ; blob for cleaning Nozzle
      G1 E-10 F1200                                                             ; retract for non oozing
      M117 Filament ready...
#      STATUS_COOLING                                                            ; LEDs show cooling
#      TURN_OFF_HEATERS
      G90
      G0 X240 Y240 F3600                                                        ; park nozzle over bucket
      STATUS_READY                                                              ; LEDs show Ready
      RESTORE_GCODE_STATE NAME=load_state
    {% else %}                                                                  ; UUPS!! Pause or M600 active, hurry up now, printfailure waits for you
      M117 loading Filament
      STATUS_PRINTING                                                           ; LEDs show printing
      G91
      G1 E50 F360                                                              ; extract 200mm for colour change
      G1 E5 F3600                                                               ; blob for cleaning Nozzle
      G1 E-1 F1200                                                              ; retract for non oozing
      M117 Filament ready, resuming...
      G90
      RESTORE_GCODE_STATE NAME=load_state
      RESUME
    {% endif %}


[gcode_macro M600]
description: Filament change
gcode: 
    PAUSE Z_MIN=50
    UNLOAD_FILAMENT

########DJ Power
# Lets assume that it's Arduino pin 12
#[output_pin SCREEN]
#pin: PC6
#value: 0

# power on
#[gcode_macro M80]
#gcode: SET_PIN PIN=SCREEN VALUE=1

# power off
#[gcode_macro M81]
#gcode: SET_PIN PIN=SCREEN VALUE=0

#[output_pin POWER]
#pin: PA12
#value: 0

# power on
#[gcode_macro M80]
#gcode: SET_PIN PIN=POWER VALUE=1

# power off
#[gcode_macro M81]
#gcode: SET_PIN PIN=POWER VALUE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
[bed_mesh default]
 version = 1
 points =
 	  0.275000, 0.246250, 0.281250, 0.275000, 0.341250, 0.223750
 	  0.226250, 0.188750, 0.206250, 0.142500, 0.147500, 0.057500
 	  0.276250, 0.288750, 0.311250, 0.226250, 0.223750, 0.060000
 	  0.301250, 0.308750, 0.341250, 0.266250, 0.237500, 0.137500
 	  0.277500, 0.311250, 0.381250, 0.313750, 0.298750, 0.211250
 	  0.195000, 0.180000, 0.251250, 0.198750, 0.166250, 0.153750
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 30.0
max_x = 215.0
min_y = 30.0
max_y = 220.0
#*#
#*# [bed_mesh x1]
#*# version = 1
#*# points =
#*# 	  0.275000, 0.246250, 0.281250, 0.275000, 0.341250, 0.223750
#*# 	  0.226250, 0.188750, 0.206250, 0.142500, 0.147500, 0.057500
#*# 	  0.276250, 0.288750, 0.311250, 0.226250, 0.223750, 0.060000
#*# 	  0.301250, 0.308750, 0.341250, 0.266250, 0.237500, 0.137500
#*# 	  0.277500, 0.311250, 0.381250, 0.313750, 0.298750, 0.211250
#*# 	  0.195000, 0.180000, 0.251250, 0.198750, 0.166250, 0.153750
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 215.0
#*# min_y = 30.0
#*# max_y = 220.0
#*#
#*# [bed_mesh 1]
#*# version = 1
#*# points =
#*# 	  0.275000, 0.246250, 0.281250, 0.275000, 0.341250, 0.223750
#*# 	  0.226250, 0.188750, 0.206250, 0.142500, 0.147500, 0.057500
#*# 	  0.276250, 0.288750, 0.311250, 0.226250, 0.223750, 0.060000
#*# 	  0.301250, 0.308750, 0.341250, 0.266250, 0.237500, 0.137500
#*# 	  0.277500, 0.311250, 0.381250, 0.313750, 0.298750, 0.211250
#*# 	  0.195000, 0.180000, 0.251250, 0.198750, 0.166250, 0.153750
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 215.0
#*# min_y = 30.0
#*# max_y = 220.0
